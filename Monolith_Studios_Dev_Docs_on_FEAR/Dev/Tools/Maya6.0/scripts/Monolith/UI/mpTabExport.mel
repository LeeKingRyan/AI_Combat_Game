//--------------------------------------------------------------------------------------------
/** @file   Monolith/UI/mpTabExport.mel
 *  @date   08/20/2004
 *
 * (c) 1997-2004 Monolith Productions, Inc.  All Rights Reserved
 */
//--------------------------------------------------------------------------------------------

source "monolith/mpModelUtility.mel";
source "monolith/mpModelExport.mel";
source "monolith/UI/mpTabbedPanel.mel";
source "monolith/UI/mpTabMain.mel";

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/24/2004
 *  @brief  
 */
global proc mpUITabExportOptionsFrameAnimationNameUpdate( string $parentUI, string $animationName )
{
	string $controlPath = $parentUI + "|AnimationName";
	
	textField -edit -text $animationName $controlPath; 
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   09/14/2004
 *  @brief  
 */
global proc mpUITabExportOptionsFrameAnimationNameChanged( string $parentUI, string $callback )
{
	string $controlPath    = $parentUI + "|AnimationName";
	int    $bFromSelection = ( ( 0 == size( `ls -selection` ) ) ? false : true );
	string $rootJoint      = mpGetRootJoint( $bFromSelection, true );
	string $animationName  = `textField -query -text $controlPath`;
	
	if ( "" != $rootJoint )
	{
		mpSetAnimationName( $animationName, $rootJoint, true );
	}
	
	mpUITabExportOptionsFrameAnimationNameUpdate( $parentUI, mpGetAnimationName( $rootJoint, true ) );
	
	if ( "" != $callback )
	{
		eval( $callback );
	}
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/24/2004
 *  @brief  Update the Export Option's frame and all children
 * 
 *   basically if a model is not selected then the options are disabled
 */
global proc mpUITabExportOptionsFrameUpdate( string $tabPath, int $fileID )
{
	string $framePath = $tabPath + "|ExportOptionsFrame|Layout";
	
	//~ print ( " File ID \n" );
	//~ print ( $fileID );
	//~ print ( "\n\n" );
	
	if( `layout -exists $framePath` )
	{
		int $bFromSelection = ( ( 0 == size( `ls -selection` ) ) ? false : true );
		
		string $rootJoint  = mpGetRootJoint( $bFromSelection, true );
		string $shapes[];
		string $sockets[];
		string $physics[];
		string $animation;
		
		//~ print ( " RootJoint \n" );
		//~ print ( $rootJoint );
		//~ print ( "\n\n" );
		
		if ( "" != $rootJoint )
		{
			$shapes    = mpGetShapes( $rootJoint, true );
			$sockets   = mpGetSockets( $rootJoint, true );
			$physics   = mpGetRigidBodies( $rootJoint, true );
			$animation = mpGetAnimationName( $rootJoint, true );
			
			//~ print ( " Shapes \n" );
			//~ print ( $shapes );
			//~ print ( "\n" );
			
			//~ print ( " Sockets \n" );
			//~ print ( $sockets );
			//~ print ( "\n" );
			
			//~ print ( " Physics \n" );
			//~ print ( $physics );
			//~ print ( "\n" );
			
			//~ print ( " Animation \n" );
			//~ print ( $animation );
			//~ print ( "\n\n" );
		}
		
		int $bRootJoint    = ( "" == $rootJoint ? false : true );
		int $bShapes       = ( ( 0 == size( $shapes )  || !$bRootJoint || -1 == $fileID ) ? false : true );
		int $bSockets      = ( ( 0 == size( $sockets ) || !$bRootJoint || -1 == $fileID ) ? false : true );
		int $bPhysics      = ( ( !mpIsHavokPluginLoaded() || ( 0 == size( $physics ) || !$bRootJoint || -1 == $fileID ) ) ? false : true );
		int $bAnimations   = ( ( "" == $animation      || !$bRootJoint || -1 == $fileID ) ? false : true );
		
		checkBox -edit -enable $bShapes     -value $bShapes ( $framePath + "|ShapesCheckbox" );
		checkBox -edit -enable $bSockets    -value $bSockets ( $framePath + "|SocketsCheckbox" );
		checkBox -edit -enable $bPhysics    -value $bPhysics ( $framePath + "|PhysicsCheckbox" );
		checkBox -edit -enable $bAnimations -value $bAnimations ( $framePath + "|AnimationCheckbox" );
		textField -edit -enable $bRootJoint ( $framePath + "|AnimationName" );
		mpUITabExportOptionsFrameAnimationNameUpdate( $framePath, $animation );
	}
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/23/2004
 *  @brief  Creates the options frame and all children for the export tab
 */
global proc string mpUITabExportOptionsFrameCreate( string $parentTabLayout )
{
	// if the Monolith plug-in is not loaded then bail
	if ( !`pluginInfo -query -loaded "Monolith.ActionGames"` )
	{
		mpConfirmDialog( "ok",
		                 "Error",
		                 "", //"Monolith.ActionGames Plug-in not loaded",
		                 "Monolith.ActionGames Plug-in not loaded",
		                 false );
		error( "Monolith.ActionGames Plug-in not loaded" );
	}

	string $exportOptionsFrame;
	
	string $parentLayout = `setParent -query`;
	
	if ( `layout -exists $parentLayout` )
	{
		// if the Export tab's Option Frame already exist then delete it so that it can be updated
		//  if code changed.
		if( `layout -exists ( $parentLayout + "|ExportOptionsFrame" )` )
		{
			deleteUI -layout ( $parentLayout + "|ExportOptionsFrame" );
		}
		
		$exportOptionsFrame = `frameLayout -label       "Settings"
		                                   -width       200
		                                   -collapsable false
		                                   -borderStyle "etchedIn"
		                                   ExportOptionsFrame`;
		{
			string $optionsFormLayout = `formLayout -numberOfDivisions 100
		                                            Layout`;
				
				string $shapesCheckbox    = `checkBox -label "Export Shapes"
				                                      -align "left"
				                                      -value true
				                                      ShapesCheckbox`;
				
				string $socketsCheckbox   = `checkBox -label "Export Sockets"
				                                      -align "left"
				                                      -value true
				                                      SocketsCheckbox`;
				
				string $physicsCheckbox   = `checkBox -label "Export Physics"
				                                      -align "left"
				                                      -value true
				                                      PhysicsCheckbox`;
				
				string $animationCheckbox = `checkBox -label "Export Animation(s)"
				                                      -align "left"
				                                      -value true
				                                      AnimationCheckbox`;
				
				string $changeCallback = "mpUITabExportUpdate( \"" + $parentTabLayout + "\" )";
				string $changeCommand  = "mpUITabExportOptionsFrameAnimationNameChanged( \"" + $optionsFormLayout + "\", \"" + encodeString( $changeCallback ) + "\" )";
				
				string $animationList = `textField -editable true
				                                   -changeCommand $changeCommand
				                                   AnimationName`;
				
				formLayout -edit 
				                 -attachForm     $shapesCheckbox    "top"    10
				                 -attachForm     $shapesCheckbox    "left"   10
				                 -attachNone     $shapesCheckbox    "bottom" 
				                 -attachForm     $shapesCheckbox    "right"  10
				
				                 -attachControl  $socketsCheckbox   "top"    2 $shapesCheckbox
				                 -attachForm     $socketsCheckbox   "left"   10
				                 -attachNone     $socketsCheckbox   "bottom" 
				                 -attachForm     $socketsCheckbox   "right"  10
				
				                 -attachControl  $physicsCheckbox   "top"    2 $socketsCheckbox
				                 -attachForm     $physicsCheckbox   "left"   10
				                 -attachNone     $physicsCheckbox   "bottom" 
				                 -attachForm     $physicsCheckbox   "right"  10
				
				                 -attachControl  $animationCheckbox "top"    2 $physicsCheckbox
				                 -attachForm     $animationCheckbox "left"   10
				                 -attachNone     $animationCheckbox "bottom" 
				                 -attachForm     $animationCheckbox "right"  10
				
				                 -attachControl  $animationList     "top"    2 $animationCheckbox
				                 -attachForm     $animationList     "left"   20
				                 -attachNone     $animationList     "bottom" 
				                 -attachForm     $animationList     "right"  10
				
				                 $optionsFormLayout;
			setParent ..;
		}
		setParent ..;
	}
	
	return $exportOptionsFrame;
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/24/2004
 *  @brief  callback function given to the selected file frame so that when a new file is
 *           selected the main tab can be updated, and we can enable/disable options in the
 *           export tab
 */
global proc mpUITabExportSelectedFileFrameChangeCallback( string $parentTabLayout, string $filename )
{
	int $selectedFileID = ( "[No Selection]" == $filename ? -1 : `mpModelOpen -query -id $filename` );

	mpUITabMainFileListSetSelection( $parentTabLayout, $selectedFileID );
	mpUITabExportUpdate( $parentTabLayout );
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/24/2004
 *  @brief  Updates the Export tabs UI Elements with the correct values from the main tab
 */
global proc mpUITabExportUpdate( string $parentTabLayout )
{
	string $tabPath = ( $parentTabLayout + "|TabExport" );
	
	if( `layout -exists $tabPath` )
	{
		int    $selectedFileID   = mpUITabMainFileListGetSelectedFileID( $parentTabLayout );
		string $selectedFilename = mpUITabMainFileListGetSelectedFilename( $parentTabLayout );
		string $filenames[]      = mpUITabMainFileListGetList( $parentTabLayout );
		string $callback         = "mpUITabExportSelectedFileFrameChangeCallback \"" + $parentTabLayout + "\"";
		
		mpUITabbedPanelSelectedFileFrameUpdate( $tabPath, $filenames, $selectedFilename, $callback );
		mpUITabExportOptionsFrameUpdate( $tabPath, $selectedFileID );
		
		// if an valid file is not selected then disable the export button
		if ( -1 == $selectedFileID )
		{
			button -edit -enable false ( $tabPath + "|ExportButton" );
		}
		// otherwise enable it
		else
		{
			button -edit -enable true ( $tabPath + "|ExportButton" );
		}
	}
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/24/2004
 *  @brief  get the option string for a call to mpDoModelExport
 *
 *   this is kind of a hodge podge right now some gross formating to a string.
 */
global proc string mpUITabExportOptionsGetOptions( string $parentUI ) 
{
	string $framePath = $parentUI + "|ExportOptionsFrame|Layout";
	
	int    $bExportShapes     = `checkBox -query -value ( $framePath + "|ShapesCheckbox" )`;
	int    $bExportSockets    = `checkBox -query -value ( $framePath + "|SocketsCheckbox" )`;
	int    $bExportPhysics    = `checkBox -query -value ( $framePath + "|PhysicsCheckbox" )`;
	int    $bExportAnimation  = `checkBox -query -value ( $framePath + "|AnimationCheckbox" )`;
	string $animationToExport = `textField -query -text ( $framePath + "|AnimationName" )`; 
	int    $bFromSelection    = ( ( 0 == size( `ls -selection` ) ) ? false : true );
	
	return $bExportShapes + "," + $bExportSockets + "," + $bExportPhysics + "," + $bExportAnimation + ",\"" + $animationToExport + "\"," + $bFromSelection;
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/24/2004
 *  @brief  the command run when the export button is pressed.
 */
global proc mpUITabExportExportButtonCommand( string $parentUI )
{
	string $filename = encodeString( mpUITabMainFileListGetSelectedFilename( $parentUI ) );
	
	//~ print( "Exported Filename: [" + $filename + "]\n" );
	
	string $options  = mpUITabExportOptionsGetOptions( ( $parentUI + "|TabExport" ) );
	string $exportCommand = "mpDoModelExport(\"" + $filename + "\"," + $options + ", true, false, false );";
	
	//~ print( $exportCommand + "\n" );
	
	eval( $exportCommand );
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/20/2004
 *  @brief  Create the Export tab for the Monolith Tabbed Panel
 *
 *   this function requires that a tab layout was previously created and is the current
 *  layout parent
 */
global proc string mpUITabExportCreate()
{
	// if the Monolith plug-in is not loaded then bail
	if ( !`pluginInfo -query -loaded "Monolith.ActionGames"` )
	{
		mpConfirmDialog( "ok",
		                 "Error",
		                 "", //"Monolith.ActionGames Plug-in not loaded",
		                 "Monolith.ActionGames Plug-in not loaded",
		                 false );
		error( "Monolith.ActionGames Plug-in not loaded" );
	}

	string $tabExportFormLayout;
	
	// confirm that the current parent exists as a tab layout
	// 	(confirm the parent IS a tabLayout)
	string $parentTabLayout = `setParent -query`;
	
	if ( `tabLayout -exists $parentTabLayout` )
	{
		// if the Export tab already exist then delete it so that it can be updated
		// if code changed.
		if( `layout -exists ( $parentTabLayout + "|TabExport" )` )
		{
			deleteUI -layout ( $parentTabLayout + "|TabExport" );
		}
		
		$tabExportFormLayout = `formLayout -numberOfDivisions 100
		                                   TabExport`;
		{
			mpUIEmbedUpdateCommand( "mpUITabExportUpdate( \"" + $parentTabLayout + "\" )" );
			
			string $filenameFrame      = mpUITabbedPanelSelectedFileFrameCreate();
			string $exportOptionsFrame = mpUITabExportOptionsFrameCreate( $parentTabLayout );
			
			string $exportButton = `button -command ( "mpUITabExportExportButtonCommand \"" + $parentTabLayout + "\"" )
			                               -label   "Export"
			                               ExportButton`;
			
			formLayout -edit -attachForm     $filenameFrame      "top"    0
			                 -attachForm     $filenameFrame      "left"   0
			                 -attachNone     $filenameFrame      "bottom"
			                 -attachForm     $filenameFrame      "right"  0
			
			                 -attachNone     $exportButton       "top"    
			                 -attachForm     $exportButton       "left"   0
			                 -attachForm     $exportButton       "bottom" 0
			                 -attachNone     $exportButton       "right"  
			
			                 -attachControl  $exportOptionsFrame "top"    2 $filenameFrame
			                 -attachForm     $exportOptionsFrame "left"   0
			                 -attachControl  $exportOptionsFrame "bottom" 2 $exportButton
			                 -attachForm     $exportOptionsFrame "right"  0
			
			                 $tabExportFormLayout;
		}
		setParent ..;
		
		tabLayout -edit -tabLabel $tabExportFormLayout "Export" $parentTabLayout;
		
		mpUITabExportUpdate( $parentTabLayout );
	}
	
	return $tabExportFormLayout;
}
