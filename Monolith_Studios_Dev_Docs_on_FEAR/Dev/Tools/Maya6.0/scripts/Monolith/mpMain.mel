//--------------------------------------------------------------------------------------------
/** @file   Monolith/mpMain.mel
 *  @date   08/17/2004
 *
 * (c) 1997-2004 Monolith Productions, Inc.  All Rights Reserved
 */
//--------------------------------------------------------------------------------------------

// Source the tabbed panel main script
source "monolith/UI/mpTabbedPanel.mel";

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   09/02/2004
 *  @brief  Updates all Monolith UI
 */
global proc mpMonolithUIRefresh()
{
	int $bTabbedPanelVisible = mpUITabbedPanelIsVisible();
	
	mpMonolithUIDestroy();
	
	eval( "source \"monolith/mpModelUtility.mel\";" );
	eval( "source \"monolith/mpLipSyncExport.mel\";" );
	eval( "source \"monolith/mpModelImport.mel\";" );
	eval( "source \"monolith/mpModelExport.mel\";" );
	eval( "source \"monolith/UI/mpTabMain.mel\";" );
	eval( "source \"monolith/UI/mpTabImport.mel\";" );
	eval( "source \"monolith/UI/mpTabExport.mel\";" );
	eval( "source \"monolith/UI/mpTabSkin.mel\";" );
	eval( "source \"monolith/UI/mpTabSockets.mel\";" );
	eval( "source \"monolith/UI/mpTabAnimation.mel\";" );
	eval( "source \"monolith/UI/mpTabPhysics.mel\";" );
	eval( "source \"monolith/UI/mpTabbedPanel.mel\";" );
	//~ eval( "source \"monolith/mpMain.mel\";" );
	eval( "source \"mpSettings.mel\";" );
	
	mpMonolithMenuCreate();
	
	if ( $bTabbedPanelVisible )
	{
		mpUITabbedPanelShow();
	}
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/17/2004
 *  @brief  Updates the UI in the Monolith menu
 */
global proc mpMonolithMenuUpdate()
{
	// Update the Tabbed Panel Menu CheckBox
	if ( `menuItem -exists TabbedPanelCheckBox` )
	{
		int $bIsPanelChecked = mpUITabbedPanelIsVisible(); 
		menuItem -edit -checkBox $bIsPanelChecked TabbedPanelCheckBox;
	}
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   09/02/2004
 *  @brief  Destroys the Monolith menu on the main menu
 *
 *   Checks for menu item existance before deleting, and therefore won't fail if the item
 *  dosen't exist
 */
proc mpMonolithMenuDestroy()
{
	if( `menu -exists MayaWindow|Monolith` )
	{
		deleteUI -menu MayaWindow|Monolith;
	}
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   08/17/2004
 *  @brief  Create the Monolith menu on the main menu
 *
 *  @todo The other Monolith UI will bail if the plug-in is not loaded, but the plug-in
 *         attempts to create the Monolith Menu item during it's loading process, and therefor
 *         this can't bail. but It also means that the menu item can exist without the
 *         plug-in. It'd be nice if this could be fixed.
 */
global proc mpMonolithMenuCreate()
{
	//~ // if the Monolith plug-in is not loaded then bail
	//~ if ( !`pluginInfo -query -loaded "Monolith.ActionGames"` )
	//~ {
		//~ mpConfirmDialog( "ok",
		                     //~ "Error",
		                     //~ "Monolith.ActionGames Plug-in not loaded",
		                     //~ "Monolith.ActionGames Plug-in not loaded",
		                     //~ false );
		//~ error( "Monolith.ActionGames Plug-in not loaded" );
	//~ }
	
	// Adding a menu to the main maya window, so set it as our current parent
	setParent "MayaWindow";
	{
		// If the menu already exists then delete it. so it can be updated
		mpMonolithMenuDestroy();
		
		// Create the Monolith Menu item on Maya's main menu
		menu -label           "Monolith"
		     -postMenuCommand "mpMonolithMenuUpdate"
	 	     -tearOff         true
		     Monolith;
		{
			// Create a checkbox to toggle the Monolith tabbed UI
			menuItem -label    "Tabbed Panel"
					 -checkBox false
					 -command  "mpUITabbedPanelToggleVisible"
					 TabbedPanelCheckBox;
			
			// Refresh the Monolith Tabbed Panel
			menuItem -label    "Refresh"
					 -checkBox false
					 -command  "mpMonolithUIRefresh();"
					 Refresh;
		}
		setParent -menu ..;
	}
	setParent ..;
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   09/02/2004
 *  @brief  Destroys all Monolith UI
 */
global proc mpMonolithUIDestroy()
{
	// Destroy in the most likely opposite order of creation
	mpUITabbedPanelDestroy();
	mpMonolithMenuDestroy();
}

//--------------------------------------------------------------------------------------------
/** @author Jeff Cotton
 *  @date   09/02/2004
 *  @brief  Updates all Monolith UI
 */
global proc mpMonolithUIUpdate()
{
	mpMonolithMenuUpdate();
	mpUITabbedPanelUpdate();
}

// go ahead and create the menu on invocation of this script
mpMonolithMenuCreate();